syntax = "proto3";

package chainvite.ticket;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "chainvite/ticket/params.proto";
import "chainvite/ticket/ticket.proto";

option go_package = "github.com/iventou/chainvite/x/ticket/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/iventou/chainvite/ticket/params";
  
  }
  
  // Queries a list of Ticket items.
  rpc Ticket    (QueryGetTicketRequest) returns (QueryGetTicketResponse) {
    option (google.api.http).get = "/iventou/chainvite/ticket/ticket/{index}";
  
  }
  rpc TicketAll (QueryAllTicketRequest) returns (QueryAllTicketResponse) {
    option (google.api.http).get = "/iventou/chainvite/ticket/ticket";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetTicketRequest {
  string index = 1;
}

message QueryGetTicketResponse {
  Ticket ticket = 1 [(gogoproto.nullable) = false];
}

message QueryAllTicketRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTicketResponse {
  repeated Ticket                                 ticket     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

