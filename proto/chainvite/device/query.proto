syntax = "proto3";

package chainvite.device;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "chainvite/device/params.proto";
import "chainvite/device/device.proto";

option go_package = "github.com/iventou/chainvite/x/device/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/iventou/chainvite/device/params";
  
  }
  
  // Queries a list of Device items.
  rpc Device    (QueryGetDeviceRequest) returns (QueryGetDeviceResponse) {
    option (google.api.http).get = "/iventou/chainvite/device/device/{index}";
  
  }
  rpc DeviceAll (QueryAllDeviceRequest) returns (QueryAllDeviceResponse) {
    option (google.api.http).get = "/iventou/chainvite/device/device";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetDeviceRequest {
  string index = 1;
}

message QueryGetDeviceResponse {
  Device device = 1 [(gogoproto.nullable) = false];
}

message QueryAllDeviceRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDeviceResponse {
  repeated Device                                 device     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

