syntax = "proto3";

package chainvite.device;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "chainvite/device/params.proto";
import "chainvite/device/device.proto";

option go_package = "github.com/iventou/chainvite/x/device/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams       (MsgUpdateParams      ) returns (MsgUpdateParamsResponse      );
  rpc CreateDevice       (MsgCreateDevice      ) returns (MsgCreateDeviceResponse      );
  rpc UpdateDevice       (MsgUpdateDevice      ) returns (MsgUpdateDeviceResponse      );
  rpc DeleteDevice       (MsgDeleteDevice      ) returns (MsgDeleteDeviceResponse      );
  rpc RegisterDevice     (MsgRegisterDevice    ) returns (MsgRegisterDeviceResponse    );
  rpc UpdateDeviceStatus (MsgUpdateDeviceStatus) returns (MsgUpdateDeviceStatusResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                          "authority";
  option           (amino.name) = "chainvite/x/device/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateDevice {
  option (cosmos.msg.v1.signer) = "creator";
  string creator      = 1;
  string index        = 2;
  string deviceId     = 3;
  string manufacturer = 4;
  string location     = 5;
  string eventId      = 6;
  string status       = 7;
}

message MsgCreateDeviceResponse {}

message MsgUpdateDevice {
  option (cosmos.msg.v1.signer) = "creator";
  string creator      = 1;
  string index        = 2;
  string deviceId     = 3;
  string manufacturer = 4;
  string location     = 5;
  string eventId      = 6;
  string status       = 7;
}

message MsgUpdateDeviceResponse {}

message MsgDeleteDevice {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string index   = 2;
}

message MsgDeleteDeviceResponse {}

message MsgRegisterDevice {
  option (cosmos.msg.v1.signer) = "creator";
  string creator      = 1;
  string manufacturer = 2;
  string location     = 3;
  string eventId      = 4;
}

message MsgRegisterDeviceResponse {}

message MsgUpdateDeviceStatus {
  option (cosmos.msg.v1.signer) = "creator";
  string creator  = 1;
  string deviceId = 2;
  string status   = 3;
}

message MsgUpdateDeviceStatusResponse {}

